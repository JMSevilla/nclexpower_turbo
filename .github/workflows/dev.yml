name: Dev CI/CD Pipeline

on:
  push:
    branches:
      - mdev
      - "feature/*"
      - "hotfix/*"

jobs:
  build_and_test_core_library:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Remove local dependencies from package.json
        run: |
          cd packages/core-library
          jq 'del(.devDependencies["eslint-config"]) | del(.devDependencies["typescript-config"])' package.json > temp.json && mv temp.json package.json

      - name: Install dependencies for core-library
        run: |
          cd packages/core-library
          npm install --no-save

      - name: Run tests with coverage for core-library
        run: |
          cd packages/core-library
          npm run test -- --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./packages/core-library/coverage/**/coverage-final.json
          flags: unittests
          name: codecov-core-library

  build_and_test_simulator:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies for simulator
        run: |
          cd apps/simulator
          npm install

      - name: Debug TypeScript paths
        run: |
          cd apps/simulator
          echo "TSConfig paths:"
          cat tsconfig.json

      - name: Debug TypeScript paths
        run: |
          cd apps/simulator
          echo "TSConfig paths:"
          cat tsconfig.json

      - name: Run tests with coverage for simulator
        run: |
          cd apps/simulator
          npm run test -- --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/**/coverage-final.json
          flags: unittests
          name: codecov-simulator

  build_and_test_web_backoffice_generic:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies for web-backoffice-generic
        run: |
          cd apps/web-backoffice-generic
          npm install

      - name: Run tests with coverage for web-backoffice-generic
        run: |
          cd apps/web-backoffice-generic
          npm run test -- --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./apps/web-backoffice-generic/coverage/**/coverage-final.json
          flags: unittests
          name: codecov-web-backoffice-generic

  build_and_test_web_customer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies for web-customer
        run: |
          cd apps/web-customer
          npm install

      - name: Run tests with coverage for web-customer
        run: |
          cd apps/web-customer
          npm run test -- --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./apps/web-customer/coverage/**/coverage-final.json
          flags: unittests
          name: codecov-web-customer

  deploy:
    runs-on: ubuntu-latest
    needs:
      [
        build_and_test_simulator,
        build_and_test_web_backoffice_generic,
        build_and_test_web_customer,
      ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy simulator to Vercel
        if: github.ref == 'refs/heads/mdev' || startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/hotfix/')
        run: |
          cd apps/simulator
          npx vercel --token ${{ secrets.VERCEL_TOKEN }}
